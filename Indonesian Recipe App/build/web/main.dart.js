// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const bottom_navigation_bar = flutter_sdk.src__material__bottom_navigation_bar;
  const bottom_navigation_bar_item = flutter_sdk.src__widgets__bottom_navigation_bar_item;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const floating_action_button = flutter_sdk.src__material__floating_action_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const icons = flutter_sdk.src__material__icons;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const dropdown = flutter_sdk.src__material__dropdown;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const list_tile = flutter_sdk.src__material__list_tile;
  const image = flutter_sdk.src__widgets__image;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const icon_button = flutter_sdk.src__material__icon_button;
  const form = flutter_sdk.src__widgets__form;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $_get = dartx._get;
  var $add = dartx.add;
  var $where = dartx.where;
  var $toList = dartx.toList;
  var $map = dartx.map;
  var $length = dartx.length;
  var $toLowerCase = dartx.toLowerCase;
  var $contains = dartx.contains;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ResepToNull: () => (T.ResepToNull = dart.constFn(dart.fnType(core.Null, [main.Resep])))(),
    BuildContextToAddRecipePage: () => (T.BuildContextToAddRecipePage = dart.constFn(dart.fnType(main.AddRecipePage, [framework.BuildContext])))(),
    JSArrayOfResep: () => (T.JSArrayOfResep = dart.constFn(_interceptors.JSArray$(main.Resep)))(),
    ResepTobool: () => (T.ResepTobool = dart.constFn(dart.fnType(core.bool, [main.Resep])))(),
    DropdownButtonOfString: () => (T.DropdownButtonOfString = dart.constFn(dropdown.DropdownButton$(core.String)))(),
    DropdownMenuItemOfString: () => (T.DropdownMenuItemOfString = dart.constFn(dropdown.DropdownMenuItem$(core.String)))(),
    StringToDropdownMenuItemOfString: () => (T.StringToDropdownMenuItemOfString = dart.constFn(dart.fnType(T.DropdownMenuItemOfString(), [core.String])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNTovoid: () => (T.StringNTovoid = dart.constFn(dart.fnType(dart.void, [T.StringN()])))(),
    BuildContextToResepDetailPage: () => (T.BuildContextToResepDetailPage = dart.constFn(dart.fnType(main.ResepDetailPage, [framework.BuildContext])))(),
    BuildContextAndintToListTile: () => (T.BuildContextAndintToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [framework.BuildContext, core.int])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    DropdownButtonFormFieldOfString: () => (T.DropdownButtonFormFieldOfString = dart.constFn(dropdown.DropdownButtonFormField$(core.String)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58136
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[4] || CT.C4
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Home",
        [BottomNavigationBarItem_activeIcon]: C[3] || CT.C3,
        [BottomNavigationBarItem_icon]: C[3] || CT.C3
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58727
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[7] || CT.C7
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Search",
        [BottomNavigationBarItem_activeIcon]: C[6] || CT.C6,
        [BottomNavigationBarItem_icon]: C[6] || CT.C6
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[5] || CT.C5], bottom_navigation_bar_item.BottomNavigationBarItem);
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    }
  }, false);
  var C = Array(9).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Food Recipe App", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.green}), home: new main.MainPage.new()});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var name$ = dart.privateName(main, "Resep.name");
  var image$ = dart.privateName(main, "Resep.image");
  var description$ = dart.privateName(main, "Resep.description");
  var region$ = dart.privateName(main, "Resep.region");
  main.Resep = class Resep extends core.Object {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    get region() {
      return this[region$];
    }
    set region(value) {
      super.region = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let image = opts && 'image' in opts ? opts.image : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let region = opts && 'region' in opts ? opts.region : null;
      return new main.Resep.new({name: name, image: image, description: description, region: region});
    }
  };
  (main.Resep.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let region = opts && 'region' in opts ? opts.region : null;
    this[name$] = name;
    this[image$] = image;
    this[description$] = description;
    this[region$] = region;
    ;
  }).prototype = main.Resep.prototype;
  dart.addTypeTests(main.Resep);
  dart.addTypeCaches(main.Resep);
  dart.setLibraryUri(main.Resep, I[0]);
  dart.setFieldSignature(main.Resep, () => ({
    __proto__: dart.getFields(main.Resep.__proto__),
    name: dart.finalFieldType(core.String),
    image: dart.finalFieldType(core.String),
    description: dart.finalFieldType(core.String),
    region: dart.finalFieldType(core.String)
  }));
  main.MainPage = class MainPage extends framework.StatefulWidget {
    createState() {
      return new main._MainPageState.new();
    }
    static ['_#new#tearOff']() {
      return new main.MainPage.new();
    }
  };
  (main.MainPage.new = function() {
    main.MainPage.__proto__.new.call(this);
    ;
  }).prototype = main.MainPage.prototype;
  dart.addTypeTests(main.MainPage);
  dart.addTypeCaches(main.MainPage);
  dart.setMethodSignature(main.MainPage, () => ({
    __proto__: dart.getMethods(main.MainPage.__proto__),
    createState: dart.fnType(main._MainPageState, [])
  }));
  dart.setLibraryUri(main.MainPage, I[0]);
  var _selectedIndex = dart.privateName(main, "_selectedIndex");
  var _onItemTapped = dart.privateName(main, "_onItemTapped");
  var BottomNavigationBarItem_tooltip = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.tooltip");
  var BottomNavigationBarItem_backgroundColor = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.backgroundColor");
  var BottomNavigationBarItem_label = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.label");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var BottomNavigationBarItem_activeIcon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.activeIcon");
  var BottomNavigationBarItem_icon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.icon");
  main._MainPageState = class _MainPageState extends framework.State$(main.MainPage) {
    [_onItemTapped](index) {
      this.setState(dart.fn(() => {
        this[_selectedIndex] = index;
      }, T.VoidTovoid()));
    }
    build(context) {
      return new scaffold.Scaffold.new({body: main._MainPageState._pages[$_get](this[_selectedIndex]), bottomNavigationBar: new bottom_navigation_bar.BottomNavigationBar.new({items: C[1] || CT.C1, currentIndex: this[_selectedIndex], selectedItemColor: colors.Colors.green, onTap: dart.bind(this, _onItemTapped)}), floatingActionButton: new floating_action_button.FloatingActionButton.new({onPressed: dart.fn(() => {
            navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.AddRecipePage.new({onAdd: dart.fn(resep => {
                  this.setState(dart.fn(() => {
                    main._MainPageState.reseps[$add](resep);
                    main._MainPageState._pages = T.JSArrayOfWidget().of([new main.HomePage.new({reseps: main._MainPageState.reseps}), new main.SearchPage.new({reseps: main._MainPageState.reseps})]);
                  }, T.VoidTovoid()));
                }, T.ResepToNull())}), T.BuildContextToAddRecipePage())}));
          }, T.VoidTovoid()), child: new icon.Icon.new(icons.Icons.add), backgroundColor: colors.Colors.green})});
    }
    static ['_#new#tearOff']() {
      return new main._MainPageState.new();
    }
  };
  (main._MainPageState.new = function() {
    this[_selectedIndex] = 0;
    main._MainPageState.__proto__.new.call(this);
    ;
  }).prototype = main._MainPageState.prototype;
  dart.addTypeTests(main._MainPageState);
  dart.addTypeCaches(main._MainPageState);
  dart.setMethodSignature(main._MainPageState, () => ({
    __proto__: dart.getMethods(main._MainPageState.__proto__),
    [_onItemTapped]: dart.fnType(dart.void, [core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._MainPageState, I[0]);
  dart.setFieldSignature(main._MainPageState, () => ({
    __proto__: dart.getFields(main._MainPageState.__proto__),
    [_selectedIndex]: dart.fieldType(core.int)
  }));
  dart.setStaticFieldSignature(main._MainPageState, () => ['reseps', '_pages']);
  dart.defineLazy(main._MainPageState, {
    /*main._MainPageState.reseps*/get reseps() {
      return T.JSArrayOfResep().of([new main.Resep.new({name: "Nasi Timbel", image: "https://via.placeholder.com/150", description: "Nasi Timbel adalah hidangan nasi khas Sunda yang dibungkus daun pisang dan biasanya disajikan dengan berbagai lauk-pauk.", region: "Sunda"}), new main.Resep.new({name: "Sate Maranggi", image: "https://via.placeholder.com/150", description: "Sate Maranggi adalah sate khas Sunda yang terbuat dari daging sapi atau kambing yang dimarinasi dengan bumbu khas dan dipanggang hingga matang.", region: "Sunda"})]);
    },
    set reseps(value) {},
    /*main._MainPageState._pages*/get _pages() {
      return T.JSArrayOfWidget().of([new main.HomePage.new({reseps: main._MainPageState.reseps}), new main.SearchPage.new({reseps: main._MainPageState.reseps})]);
    },
    set _pages(value) {}
  }, false);
  var reseps$ = dart.privateName(main, "HomePage.reseps");
  main.HomePage = class HomePage extends framework.StatefulWidget {
    get reseps() {
      return this[reseps$];
    }
    set reseps(value) {
      super.reseps = value;
    }
    static ['_#new#tearOff'](opts) {
      let reseps = opts && 'reseps' in opts ? opts.reseps : null;
      return new main.HomePage.new({reseps: reseps});
    }
    createState() {
      return new main._HomePageState.new();
    }
  };
  (main.HomePage.new = function(opts) {
    let reseps = opts && 'reseps' in opts ? opts.reseps : null;
    this[reseps$] = reseps;
    main.HomePage.__proto__.new.call(this);
    ;
  }).prototype = main.HomePage.prototype;
  dart.addTypeTests(main.HomePage);
  dart.addTypeCaches(main.HomePage);
  dart.setMethodSignature(main.HomePage, () => ({
    __proto__: dart.getMethods(main.HomePage.__proto__),
    createState: dart.fnType(main._HomePageState, [])
  }));
  dart.setLibraryUri(main.HomePage, I[0]);
  dart.setFieldSignature(main.HomePage, () => ({
    __proto__: dart.getFields(main.HomePage.__proto__),
    reseps: dart.finalFieldType(core.List$(main.Resep))
  }));
  main._HomePageState = class _HomePageState extends framework.State$(main.HomePage) {
    build(context) {
      let filteredReseps = this.widget.reseps[$where](dart.fn(resep => resep.region === this.selectedRegion, T.ResepTobool()))[$toList]();
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Resep Masakan " + this.selectedRegion)}), body: new basic.Column.new({children: T.JSArrayOfWidget().of([new (T.DropdownButtonOfString()).new({value: this.selectedRegion, items: T.JSArrayOfString().of(["Sunda", "Jawa", "Jakarta", "Kalimantan", "Sulawesi", "Sumatra"])[$map](T.DropdownMenuItemOfString(), dart.fn(value => new (T.DropdownMenuItemOfString()).new({value: value, child: new text.Text.new(value)}), T.StringToDropdownMenuItemOfString()))[$toList](), onChanged: dart.fn(newValue => {
                this.setState(dart.fn(() => {
                  this.selectedRegion = dart.nullCheck(newValue);
                }, T.VoidTovoid()));
              }, T.StringNTovoid())}), new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: filteredReseps[$length], itemBuilder: dart.fn((context, index) => {
                  let resep = filteredReseps[$_get](index);
                  return new list_tile.ListTile.new({leading: new image.Image.network(resep.image), title: new text.Text.new(resep.name), onTap: dart.fn(() => {
                      navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.ResepDetailPage.new({resep: resep}), T.BuildContextToResepDetailPage())}));
                    }, T.VoidTovoid())});
                }, T.BuildContextAndintToListTile())})})])})});
    }
    static ['_#new#tearOff']() {
      return new main._HomePageState.new();
    }
  };
  (main._HomePageState.new = function() {
    this.selectedRegion = "Sunda";
    main._HomePageState.__proto__.new.call(this);
    ;
  }).prototype = main._HomePageState.prototype;
  dart.addTypeTests(main._HomePageState);
  dart.addTypeCaches(main._HomePageState);
  dart.setMethodSignature(main._HomePageState, () => ({
    __proto__: dart.getMethods(main._HomePageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._HomePageState, I[0]);
  dart.setFieldSignature(main._HomePageState, () => ({
    __proto__: dart.getFields(main._HomePageState.__proto__),
    selectedRegion: dart.fieldType(core.String)
  }));
  var reseps$0 = dart.privateName(main, "SearchPage.reseps");
  main.SearchPage = class SearchPage extends framework.StatefulWidget {
    get reseps() {
      return this[reseps$0];
    }
    set reseps(value) {
      super.reseps = value;
    }
    static ['_#new#tearOff'](opts) {
      let reseps = opts && 'reseps' in opts ? opts.reseps : null;
      return new main.SearchPage.new({reseps: reseps});
    }
    createState() {
      return new main._SearchPageState.new();
    }
  };
  (main.SearchPage.new = function(opts) {
    let reseps = opts && 'reseps' in opts ? opts.reseps : null;
    this[reseps$0] = reseps;
    main.SearchPage.__proto__.new.call(this);
    ;
  }).prototype = main.SearchPage.prototype;
  dart.addTypeTests(main.SearchPage);
  dart.addTypeCaches(main.SearchPage);
  dart.setMethodSignature(main.SearchPage, () => ({
    __proto__: dart.getMethods(main.SearchPage.__proto__),
    createState: dart.fnType(main._SearchPageState, [])
  }));
  dart.setLibraryUri(main.SearchPage, I[0]);
  dart.setFieldSignature(main.SearchPage, () => ({
    __proto__: dart.getFields(main.SearchPage.__proto__),
    reseps: dart.finalFieldType(core.List$(main.Resep))
  }));
  var _searchController = dart.privateName(main, "_searchController");
  var _filteredReseps = dart.privateName(main, "_filteredReseps");
  var _searchResep = dart.privateName(main, "_searchResep");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  main._SearchPageState = class _SearchPageState extends framework.State$(main.SearchPage) {
    [_searchResep]() {
      let query = this[_searchController].text[$toLowerCase]();
      this.setState(dart.fn(() => {
        this[_filteredReseps] = this.widget.reseps[$where](dart.fn(resep => resep.name[$toLowerCase]()[$contains](query), T.ResepTobool()))[$toList]();
      }, T.VoidTovoid()));
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Search Recipes")}), body: new basic.Padding.new({padding: C[8] || CT.C8, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new text_field.TextField.new({controller: this[_searchController], decoration: new input_decorator.InputDecoration.new({labelText: "Search", suffixIcon: new icon_button.IconButton.new({icon: new icon.Icon.new(icons.Icons.search), onPressed: dart.bind(this, _searchResep)})}), onChanged: dart.fn(value => {
                  this[_searchResep]();
                }, T.StringTovoid())}), new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: this[_filteredReseps][$length], itemBuilder: dart.fn((context, index) => {
                    let resep = this[_filteredReseps][$_get](index);
                    return new list_tile.ListTile.new({leading: new image.Image.network(resep.image), title: new text.Text.new(resep.name), onTap: dart.fn(() => {
                        navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.ResepDetailPage.new({resep: resep}), T.BuildContextToResepDetailPage())}));
                      }, T.VoidTovoid())});
                  }, T.BuildContextAndintToListTile())})})])})})});
    }
    static ['_#new#tearOff']() {
      return new main._SearchPageState.new();
    }
  };
  (main._SearchPageState.new = function() {
    this[_searchController] = new editable_text.TextEditingController.new();
    this[_filteredReseps] = T.JSArrayOfResep().of([]);
    main._SearchPageState.__proto__.new.call(this);
    ;
  }).prototype = main._SearchPageState.prototype;
  dart.addTypeTests(main._SearchPageState);
  dart.addTypeCaches(main._SearchPageState);
  dart.setMethodSignature(main._SearchPageState, () => ({
    __proto__: dart.getMethods(main._SearchPageState.__proto__),
    [_searchResep]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._SearchPageState, I[0]);
  dart.setFieldSignature(main._SearchPageState, () => ({
    __proto__: dart.getFields(main._SearchPageState.__proto__),
    [_searchController]: dart.finalFieldType(editable_text.TextEditingController),
    [_filteredReseps]: dart.fieldType(core.List$(main.Resep))
  }));
  var onAdd$ = dart.privateName(main, "AddRecipePage.onAdd");
  main.AddRecipePage = class AddRecipePage extends framework.StatefulWidget {
    get onAdd() {
      return this[onAdd$];
    }
    set onAdd(value) {
      super.onAdd = value;
    }
    static ['_#new#tearOff'](opts) {
      let onAdd = opts && 'onAdd' in opts ? opts.onAdd : null;
      return new main.AddRecipePage.new({onAdd: onAdd});
    }
    createState() {
      return new main._AddRecipePageState.new();
    }
  };
  (main.AddRecipePage.new = function(opts) {
    let onAdd = opts && 'onAdd' in opts ? opts.onAdd : null;
    this[onAdd$] = onAdd;
    main.AddRecipePage.__proto__.new.call(this);
    ;
  }).prototype = main.AddRecipePage.prototype;
  dart.addTypeTests(main.AddRecipePage);
  dart.addTypeCaches(main.AddRecipePage);
  dart.setMethodSignature(main.AddRecipePage, () => ({
    __proto__: dart.getMethods(main.AddRecipePage.__proto__),
    createState: dart.fnType(main._AddRecipePageState, [])
  }));
  dart.setLibraryUri(main.AddRecipePage, I[0]);
  dart.setFieldSignature(main.AddRecipePage, () => ({
    __proto__: dart.getFields(main.AddRecipePage.__proto__),
    onAdd: dart.finalFieldType(dart.fnType(dart.dynamic, [main.Resep]))
  }));
  var _formKey = dart.privateName(main, "_formKey");
  var _nameController = dart.privateName(main, "_nameController");
  var _imageController = dart.privateName(main, "_imageController");
  var _descriptionController = dart.privateName(main, "_descriptionController");
  var _selectedRegion = dart.privateName(main, "_selectedRegion");
  var _submit = dart.privateName(main, "_submit");
  main._AddRecipePageState = class _AddRecipePageState extends framework.State$(main.AddRecipePage) {
    [_submit]() {
      let t1, t0;
      if (dart.nullCheck(this[_formKey].currentState).validate()) {
        let newResep = new main.Resep.new({name: this[_nameController].text, image: this[_imageController].text, description: this[_descriptionController].text, region: this[_selectedRegion]});
        t0 = this.widget;
        t1 = newResep;
        t0.onAdd(t1);
        navigator.Navigator.pop(T.ObjectN(), this.context);
      }
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Add New Recipe")}), body: new basic.Padding.new({padding: C[8] || CT.C8, child: new form.Form.new({key: this[_formKey], child: new scroll_view.ListView.new({children: T.JSArrayOfWidget().of([new text_form_field.TextFormField.new({controller: this[_nameController], decoration: new input_decorator.InputDecoration.new({labelText: "Name"}), validator: dart.fn(value => {
                    if (value == null || value[$isEmpty]) {
                      return "Please enter a name";
                    }
                    return null;
                  }, T.StringNToStringN())}), new text_form_field.TextFormField.new({controller: this[_imageController], decoration: new input_decorator.InputDecoration.new({labelText: "Image URL"}), validator: dart.fn(value => {
                    if (value == null || value[$isEmpty]) {
                      return "Please enter an image URL";
                    }
                    return null;
                  }, T.StringNToStringN())}), new text_form_field.TextFormField.new({controller: this[_descriptionController], decoration: new input_decorator.InputDecoration.new({labelText: "Description"}), validator: dart.fn(value => {
                    if (value == null || value[$isEmpty]) {
                      return "Please enter a description";
                    }
                    return null;
                  }, T.StringNToStringN())}), new (T.DropdownButtonFormFieldOfString()).new({value: this[_selectedRegion], items: T.JSArrayOfString().of(["Sunda", "Jawa", "Jakarta", "Kalimantan", "Sulawesi", "Sumatra"])[$map](T.DropdownMenuItemOfString(), dart.fn(value => new (T.DropdownMenuItemOfString()).new({value: value, child: new text.Text.new(value)}), T.StringToDropdownMenuItemOfString()))[$toList](), onChanged: dart.fn(newValue => {
                    this.setState(dart.fn(() => {
                      this[_selectedRegion] = dart.nullCheck(newValue);
                    }, T.VoidTovoid()));
                  }, T.StringNTovoid()), decoration: new input_decorator.InputDecoration.new({labelText: "Region"})}), new basic.SizedBox.new({height: 20}), new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _submit), child: new text.Text.new("Add Recipe")})])})})})});
    }
    static ['_#new#tearOff']() {
      return new main._AddRecipePageState.new();
    }
  };
  (main._AddRecipePageState.new = function() {
    this[_formKey] = T.GlobalKeyOfFormState().new();
    this[_nameController] = new editable_text.TextEditingController.new();
    this[_imageController] = new editable_text.TextEditingController.new();
    this[_descriptionController] = new editable_text.TextEditingController.new();
    this[_selectedRegion] = "Sunda";
    main._AddRecipePageState.__proto__.new.call(this);
    ;
  }).prototype = main._AddRecipePageState.prototype;
  dart.addTypeTests(main._AddRecipePageState);
  dart.addTypeCaches(main._AddRecipePageState);
  dart.setMethodSignature(main._AddRecipePageState, () => ({
    __proto__: dart.getMethods(main._AddRecipePageState.__proto__),
    [_submit]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._AddRecipePageState, I[0]);
  dart.setFieldSignature(main._AddRecipePageState, () => ({
    __proto__: dart.getFields(main._AddRecipePageState.__proto__),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_nameController]: dart.finalFieldType(editable_text.TextEditingController),
    [_imageController]: dart.finalFieldType(editable_text.TextEditingController),
    [_descriptionController]: dart.finalFieldType(editable_text.TextEditingController),
    [_selectedRegion]: dart.fieldType(core.String)
  }));
  var resep$ = dart.privateName(main, "ResepDetailPage.resep");
  main.ResepDetailPage = class ResepDetailPage extends framework.StatelessWidget {
    get resep() {
      return this[resep$];
    }
    set resep(value) {
      super.resep = value;
    }
    static ['_#new#tearOff'](opts) {
      let resep = opts && 'resep' in opts ? opts.resep : null;
      return new main.ResepDetailPage.new({resep: resep});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new(this.resep.name)}), body: new basic.Padding.new({padding: C[8] || CT.C8, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new image.Image.network(this.resep.image), new basic.SizedBox.new({height: 16}), new text.Text.new(this.resep.name, {style: new text_style.TextStyle.new({fontSize: 24, fontWeight: ui.FontWeight.bold})}), new basic.SizedBox.new({height: 16}), new text.Text.new(this.resep.description, {style: new text_style.TextStyle.new({fontSize: 16})})])})})});
    }
  };
  (main.ResepDetailPage.new = function(opts) {
    let resep = opts && 'resep' in opts ? opts.resep : null;
    this[resep$] = resep;
    main.ResepDetailPage.__proto__.new.call(this);
    ;
  }).prototype = main.ResepDetailPage.prototype;
  dart.addTypeTests(main.ResepDetailPage);
  dart.addTypeCaches(main.ResepDetailPage);
  dart.setMethodSignature(main.ResepDetailPage, () => ({
    __proto__: dart.getMethods(main.ResepDetailPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.ResepDetailPage, I[0]);
  dart.setFieldSignature(main.ResepDetailPage, () => ({
    __proto__: dart.getFields(main.ResepDetailPage.__proto__),
    resep: dart.finalFieldType(main.Resep)
  }));
  main.main = function main$0() {
    binding.runApp(new main.MyApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
